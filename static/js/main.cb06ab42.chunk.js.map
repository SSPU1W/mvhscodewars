{"version":3,"sources":["config.js","helpers/spreadsheet.js","components/Scoreboard.js","App.js","serviceWorker.js","index.js"],"names":["config","apiKey","discoveryDocs","spreadsheetId","customHeaders","0","1","2","Scoreboard","_ref","users","selectedScoreboard","react_default","a","createElement","className","map","user","i","selected","ranks","languages","key","username","score","overall","name","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","initClient","window","gapi","client","init","then","callback","onLoad","load","sheets","spreadsheets","values","get","range","response","data","result","firstRow","length","headers","push","obj","j","error","fetchCodeWarsUsers","date","Date","startOfFinalYear","getFullYear","getMonth","yearOptions","value","label","state","selectedOption","spreadsheetList","_this2","_this$state","filter","found","find","listItem","userName","isCurrentStudent","sort","b","aValue","bValue","greater","onClick","setState","components_Scoreboard","userList","_this3","promises","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_loop","promise","Promise","resolve","reject","fetch","res","json","_iterator","Symbol","iterator","next","done","err","return","all","sorted","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cb06ab42.chunk.js","sourcesContent":["export default {\n    apiKey: \"AIzaSyC3PkySw8_ZSR1txgmpk2MZdMgm2dQ32YE\",\n    discoveryDocs: \n      [\"https://sheets.googleapis.com/$discovery/rest?version=v4\"],\n    spreadsheetId: \"1CcVIpk0Hq5Fzg_I9E5a5tn9HaOj80yjsGfrbN-SLhlg\"\n\n};","import config from \"../config\";\n/**\n * Load the cars from the spreadsheet\n * Get the right values from it and assign.\n */\n/* \nFirst row becomes default keys for the returned object (array)\nex: if the header is: Name, Date, Score\nthen each object will look like:\n{\n  name: \"\",\n  date: \"\",\n  score: \"\",\n}\n*/\n\n// here, set any custom headers\n// overrides the headers in first row of the spreadsheet.\nvar customHeaders = {\n    0: \"isCurrentStudent\",\n    1: \"userName\",\n    2: \"year\"\n};\n  \nexport function load(callback) {\n  window.gapi.client.load(\"sheets\", \"v4\", () => {\n    window.gapi.client.sheets.spreadsheets.values\n        .get({\n            spreadsheetId: config.spreadsheetId,\n            range: \"Sheet1\"\n        })\n        .then(\n            response => {\n                const data = response.result.values;\n                // get data in spreadsheet\n                \n                // get first row if exists\n                var firstRow = data.length > 0 ? data[0] : [];\n                // create headers based on first row and customHeaders\n                var headers = [];\n                for (let i = 0; i < firstRow.length; i++) {\n                    headers.push(customHeaders[i] ? customHeaders[i] : firstRow[i]);\n                }\n                \n                \n                var users = []\n                //get the data from the rest of the spreadsheet and create objects for each of them\n                if (data.length > 1) {\n                    for (let i = 1; i < data.length; i++) {\n                    var obj = {};\n                    for (var j = 0; j < data[i].length; j++) {\n                        if (j < headers.length) obj[headers[j]] = data[i][j];\n                    }\n                    users.push(obj);\n                    }\n                }\n                callback(users);\n            },\n            response => {\n                callback(false, response.result.error);\n            }\n        );\n  });\n}","import React from \"react\";\n\nconst Scoreboard = ({users, selectedScoreboard}) => \n    <div className=\"scoreboard scoreboard-overall\">\n        <div className=\"scoreboard-header\">\n            <div className=\"rank\"></div>\n            <div className=\"name\">Name</div>\n            <div className=\"score\">Score</div>\n            <div className=\"overall no-mobile\">Rank</div>\n        </div>\n        {\n            users.map((user, i) => {\n                let selected = user.ranks[selectedScoreboard] || user.ranks.languages[selectedScoreboard];\n                return <div className=\"scoreboard-item\" key={i}>\n                    <div className=\"rank\">{i+1}</div>\n                    <div className=\"username\">{user.username}</div>\n                    <div className=\"score\">{selected.score}</div>\n                    <div className=\"overall no-mobile\">{user.ranks.overall.name}</div>\n                </div>\n            })\n        }\n        </div>\n\nexport default Scoreboard;","import React, { Component } from 'react';\nimport config from \"./config\";\nimport { load } from \"./helpers/spreadsheet\";\nimport \"./header.css\";\nimport \"./App.css\";\nimport Scoreboard from './components/Scoreboard';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    // start year = 2018-2019\n    // end year up to year x, if month > august, then {x}-{x+1} else {x-1}-{x}\n    let date = new Date();\n    let startOfFinalYear = date.getFullYear() - 1;\n    if (date.getMonth() > 7) {\n      startOfFinalYear += 1;\n    }\n\n    let yearOptions = [{value: \"All Years\", label: \"All Years\"}]\n    for (var i = 2018; i <= startOfFinalYear; i++) {\n      yearOptions.push({value: i + \"-\" + i+1, label: i + \"-\" + (i+1)});\n    }\n    this.state = {\n      users: [],\n      yearOptions: yearOptions,\n      selectedScoreboard: \"overall\",\n      selectedOption: \"current\",\n      spreadsheetList: []\n    }\n  }\n  componentDidMount() {\n    window.gapi && window.gapi.load(\"client\", this.initClient);\n  }\n  render() {\n    let {selectedScoreboard, selectedOption, users, spreadsheetList} = this.state;\n    // filter and sort by language\n    // filter by current year\n    if (selectedOption === \"current\") {\n      users = users.filter(user => {\n        let found = spreadsheetList.find(listItem => user.username === listItem.userName);\n        if (!found) return false;\n        return found.isCurrentStudent === \"1\";\n      });\n    }\n\n    users = users.filter(user => user.ranks[selectedScoreboard] || user.ranks.languages[selectedScoreboard]).sort((a, b) => {\n      var aValue = a.ranks[selectedScoreboard] || a.ranks.languages[selectedScoreboard];\n      var bValue = b.ranks[selectedScoreboard] || b.ranks.languages[selectedScoreboard];\n      var greater =  aValue.score < bValue.score ? 1 : -1;\n      if (aValue.score === bValue.score) {\n        return a.username < b.username ? 1 : -1;\n      }\n      return greater;\n    })\n    \n\n    return (\n      <div className=\"App\">\n        {/* Header */}\n        <header>\n          <div className=\"title\">MVHS Codewars</div>\n          <div className=\"subtitle\">Mountain View High School Computer Science</div>\n          <div className=\"teacher\">Join the Leaderboard: bit.ly/2SgKowb</div>\n        </header>\n        <div className=\"scoreboard-container\">\n          <div className=\"scoreboard-title\">Codewars Scoreboard</div>\n          <div className=\"scoreboard-tab\">\n            <div \n              className={selectedScoreboard === \"overall\" ? \"tab-item selected\" : \"tab-item\"} \n              onClick={() => this.setState({selectedScoreboard: \"overall\"})}\n            >Overall</div>\n            <div \n              className={selectedScoreboard === \"python\" ? \"tab-item selected\" : \"tab-item\"}\n              onClick={() => this.setState({selectedScoreboard: \"python\"})}\n            >Python</div>\n            <div \n              className={selectedScoreboard === \"c\" ? \"tab-item selected\" : \"tab-item\"}\n              onClick={() => this.setState({selectedScoreboard: \"c\"})}\n            >C</div>\n            <div \n              className={selectedScoreboard === \"java\" ? \"tab-item selected\" : \"tab-item\"}\n              onClick={() => this.setState({selectedScoreboard: \"java\"})}\n            >Java</div>\n          </div>\n          <Scoreboard users={users} selectedScoreboard={selectedScoreboard}/>\n        </div>\n        <div className=\"options-container\">\n            <div \n              className={selectedOption === \"current\" ? \"options-item left selected\" : \"options-item left\"}\n              onClick={() => this.setState({selectedOption: \"current\"})}\n            >Current students</div>\n            <div \n              className={selectedOption === \"all time\" ? \"options-item right selected\" : \"options-item right\"}\n              onClick={() => this.setState({selectedOption: \"all time\"})}\n            >All Time</div>\n        </div>\n      </div>\n    );\n  }\n\n  // init for google apps script\n  initClient = () => {\n    // 2. Initialize the JavaScript client library.\n    window.gapi.client\n      .init({\n        apiKey: config.apiKey,\n        // Your API key will be automatically added to the Discovery Document URLs.\n        discoveryDocs: config.discoveryDocs\n      })\n      .then(() => {\n      // 3. Initialize and make the API request.\n      load(this.onLoad);\n    });\n  };\n  \n  onLoad = (data, error) => {\n    if (data) {\n      this.fetchCodeWarsUsers(data);\n    }\n  }\n\n  fetchCodeWarsUsers(userList) {\n    let promises = [];\n    for (let user of userList) {\n      let promise = new Promise((resolve, reject) => {\n          fetch(\"https://cors-anywhere.herokuapp.com/https://www.codewars.com/api/v1/users/\" + user.userName).then((res) => res.json()).then((json) => {\n          resolve(json);\n        })\n      })\n      promises.push(promise);\n    }\n    // once everything has been added\n    Promise.all(promises).then((users) => {\n      // sort users by rank\n      users = users.filter((user) => user.username);\n      let sorted = users.sort((a,b) => {\n        var greater =  a.ranks.overall.score < b.ranks.overall.score ? 1 : -1;\n        if (a.ranks.overall.score === b.ranks.overall.score) {\n          return a.username < b.username ? 1 : -1;\n        }\n        return greater;\n      })\n      this.setState({\n        users: sorted,\n        spreadsheetList: userList\n      })\n    })\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}